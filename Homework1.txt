 Home Work 1 UI Class 1 -july 7-2016


 1.Fetch command :  The fetch command in Git is used to fetch all the changes that have been made to the remote repository , which are not present in your local working directory i.e it fetches all the updates made to the files after you made the last update.


2. Pull : The Pull command not only fetches the new updates which have been made to the files but also merge those changes to files in the current working directory. After using  the Pull command the current working directory becomes updated and it is same as the remote working repository.

3. Push : Push is used to push the commited changes in the local repository to the remote repository. it is used to update the remote repository with the commited changes at the remote repository. Push also chamges the current version of the file.

4.commit : It records the changes made to the local repository. It saves the latest changes made to the local repository . These changes can be referenced in the future.

5. Difference between commit and push ?

Answer: Commit just records the changes made to local repository.It just maintains  a history of the changes made to loacl repository and why they were made. Push pushes the changes made at the local repository tothe remote repository. It changes the version of that file at the remote repository. After pushing the changes a new version of the same file is craeted at the remote repository.

6.How to create a merge conflict?

 Answer : suppose you and some other developer are working on the same file and its version is version5.

The other developer made changes to file(version 5) and push those changes to the remote repository a new version of the file has been created at the remote repository (version 6).You are still working on the version 5 and you don't pull the changes made to the version 5 by other developer and you  just start pushing your changes your changes to the remote repository. In that case a merge conflict will happen because the version of the file you updated is different from the file present at the remote repository.

7. How to resolve merge conflicts ?

Answer: <<<<<<< HEAD
 "Hello World!" This is my file
=======
"Hello World" This is my file and i am editing this file.
>>>>>>> new_branch

in the above code this ====== symbol is seperating my code with the other developer code with whom i have a merge conflict.  The code before ===== is your code and after ===== is other developers code , you just have to remove these special symbols,new_branch and head from the code to resolve the merge conflict.

the resolved code below :

"Hello World!" This is my file

"Hello World" This is my file and i am editing this file.

8. why commit message is important?

Answer : It helps to mintain a history of all the changes that have been made to the local repository.  It helps the people who are working on the same file to know who made the changes to the code , when were they made and why were made.
 for example :

Commit: a752c38eb64a8838a6c652dda9e0e341cbf42d9c [a752c38]
Parents: 7e6c2194df
Author: deepthiraavi <deepthiraavi00@gmail.com>
Date: Friday, July 8, 2016 11:04:46 AM
Hi this is an update


from the above commit message we know that deepthi made the change to the code . she made it on july 8 and she made this change because she wanted to make an update.
 
9. if you have a working copy and a file in that is modified and not commited , you need to pull the new changes . What steps you need to take?

10. Why it is good idea to pull before push?

Ans : It is always a good idea to pull before push , in this way you can avoid merge conflicts and moreover you will always have an updated copy of the file. You will always have the current version of the file to work on.

11. why it is good idea to commit before you pull?

Answer : suppose you have made a lot of changes to lot of changes to your local repository and suddenly after make the changes when you check the status using the status command or if you fetch the data you realize that a lot of changes are already made to the file in remote repository i.e the remote repository has already been update. you want to update the local repository according to remote repository but you also want your current changes in the local repository tobe saved somewhere.In that case you can first commit your changes and then pull the data from remote repository. In this way you can always refer to what changes you made to the file before pulling it from remote repository.

