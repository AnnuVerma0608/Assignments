Home work 3

1. What is doctype and why it is used? 

Answer : 

document type definition : it is way of telling the browser what type of document it will be. eg : whether it will be an html document

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">

here <!DOCTYPE HTML : this is the first part of the document type defintion it is way of telling the browser that it is an html document. (document declaration)
PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd" : this the public identifier. (document definition)


Basically, if you have a doctype on your page it will help the web broswer to display your page according to the defined web standards but If there's no doctype, the browser might decide to display your page in "quirks mode", which was is now outdated which may break your code in certain ways.

<!DOCTYPE> declaration refers to a DTD, because HTML 4.01 was based on SGML. The DTD specifies the rules for the markup language, so that the browsers render the content correctly.  In otherwords <!DOCTYPE> provides the browser what type oddocument it is , what are rules for the particular language used in this document and how it has to display it on the browser.


The DOCTYPE tells the consuming user agent (web browsers, web crawlers, validation tools) what type of document the file is. reference :
(http://stackoverflow.com/questions/414891/what-is-doctype)

different document type declarations : reference ( http://www.w3schools.com/tags/tag_doctype.asp)

1.<!DOCTYPE html>  // used in html 5 

2 Strict : it allowes to use all the html elements and attibutes , except the prsetational elements like font , italics and bold and framesets are also not allowed (also not supported in html 5).

example : <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">

3. Transitional :it allowes to use all the html elements and attibutes also the prsetational elements like font , italics and bold but framesets are  not allowed (also not supported in html 5).

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

4 Frameset : Transitional :it allowes to use all the html elements and attibutes also the prsetational elements like font , italics and bold and framesets are  also allowed (also not supported in html 5).

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">

2,3,4 all three can used in html 4, and xhtml.

What are semantic elements? 
(<article>,<aside>,<details>,<figcaption>,<figure>,<footer>,<header>,<main>,<mark>,<nav>,<section>,<summary>,<time>)?


Semantic elements are elements with a meaning.The readonly attribute specifies that the input field is read only

A semantic element clearly describes its meaning to both the browser and the developer.

Examples of non-semantic elements: <div> and <span> - Tells nothing about its content.

Examples of semantic elements: <form>, <table>, and <img> - Clearly defines its content.

 (// source of information : http://www.w3schools.com/html/html5_semantic_elements.asp)


Semantic HTML or semantic markup is HTML that introduces meaning to the web page rather than just presentation. For example, a <p> tag indicates that the enclosed text is a paragraph. This is both semantic and presentational, because people know what a “paragraph” is and browsers know how to display them. In HTML4* tags like <b> and <i> are not semantic, because they define only how the text should look (bold or italic) and do not provide any meaning to the text.

Other examples of semantic HTML tags include the header tags <h1> through <h6>, <blockquote>, <code>, and <em>. And there are lots of other semantic HTML tags.

The benefit of writing semantic HTML stems from the goal of a web page—to communicate. And by adding semantic tags to your documents, you are providing additional information about your document, which aids in communication.


Semantic HTML tags provide information about the contents of those tags that goes beyond just how they look on a page.  (// source of information :http://

webdesign.about.com/od/htmltags/a/why-semantic-html.htm) 

1.  <article> is a content scetioning article. it allows to organize the document content into logical pieces

The HTML <article> element represents a self-contained composition in a document, page, application, or site, which is intended to be independently distributable or reusable (e.g., in syndication). This could be a forum post, a magazine or newspaper article, a blog entry, an object, or any other independent item of content. Each <article> should be identified, typically by including a heading (<h1>-<h6> element) as a child of the <article> element.

2. <footer> The HTML <footer> element represents a footer for its nearest sectioning content or sectioning root element. A footer typically contains information about the author of the section, copyright data or links to related documents.

it defines the footer for its nearest root element or parent element

3. <aside> : it is a content element it is used when you want to seperate particular content from the other content for example sidebar.

4. <details> : it is an Interactive element . it is used when you want to provide the user with additional details about something.

 specifies additional details that the user can view or hide on demand. and this tag is currently supported only in few browsers such as Opera, Chrome, and in Safari 6.

5.<figcaption>: it is text content tag. this is  used to provide a caption to the document.

6. <figure> : it is self contained element , though it is related to the flow of the document , its position is indenpdent of the flow of the document.

7. <header>: The HTML <header> element represents a group of introductory or navigational aids. It may contain some heading elements but also other elements like a logo, wrapped section's header.

8. <main> : The <main> tag specifies the main content of a document.

The content inside the <main> element should be unique to the document. It should not contain any content that is repeated across documents such as sidebars, navigation links, copyright information, site logos, and search forms.

There must not be more than one <main> element in a document. The <main> element must NOT be a descendant of an <article>, <aside>, <footer>, <header>, or <nav> element.

9. <mark> : its is used to highlight particular content of the text.

10. <nav> : represents a section of a page that links to other pages or to parts within the page: a section with navigation links.


example :

<nav>
<a href="/html/">HTML</a> |
<a href="/css/">CSS</a> |
<a href="/js/">JavaScript</a> |
<a href="/jquery/">jQuery</a>
</nav>

here html ,css , js , jquery links to some other pages  i.e  they navigate to some other pages.

11. <section> : If you want a particular part of a page separated from the rest of the page due to the information in it - its "content", use section elements (a generic section). 

12 <summary> : Defines a visible heading for a <details> tag .

13. <time> : Element links a given content with a machine-readable translation. If the content is time- or date-related, the <time> must be used.

ques 3 Why each semantic element is used and give a brief description on each of it? provide an example explaining the importance of using it in your example

answer : Semantic HTML or semantic markup is HTML that introduces meaning to the web page rather than just presentation. For example, a <p> tag indicates that the enclosed text is a paragraph. This is both semantic and presentational, because people know what a “paragraph” is and browsers know how to display them. In HTML4* tags like <b> and <i> are not semantic, because they define only how the text should look (bold or italic) and do not provide any meaning to the text.

Other examples of semantic HTML tags include the header tags <h1> through <h6>, <blockquote>, <code>, and <em>. And there are lots of other semantic HTML tags.

The benefit of writing semantic HTML stems from the goal of a web page—to communicate. And by adding semantic tags to your documents, you are providing additional information about your document, which aids in communication.


Semantic HTML tags provide information about the contents of those tags that goes beyond just how they look on a page.  (// source of information :http://

webdesign.about.com/od/htmltags/a/why-semantic-html.htm)

 Semantics within HTML is the practice of giving content on the page meaning and structure by using the proper element. Semantic code describes the value of content on a page, regardless of the style or appearance of that content. There are several benefits to using semantic elements, including enabling computers, screen readers, search engines, and other devices to adequately read and understand the content on a web page. Additionally, semantic HTML is easier to manage and work with, as it shows clearly what each piece of content is about.

 Divisions, or <div>s, and <span>s are HTML elements that act as containers solely for styling purposes. As generic containers, they do not come with any overarching meaning or semantic value. Paragraphs are semantic in that content wrapped within a <p> element is known and understood as a paragraph. <div>s and <span>s do not hold any such meaning and are simply containers. 

 reference (http://learn.shayhowe.com/html-css/getting-to-know-html)

 ques 4  Differenciate each semantic element from other?

 answer :









